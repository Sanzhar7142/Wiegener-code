import  sys


def  encrypt ( текст , ключ ):
    альф  =  ''
    для  i  в  диапазоне ( 256 ):
        alph  + =  chr ( я )
    я  =  0
    lenth  =  len ( текст )
    код  =  ''
    а  len ( текст ) >  len ( ключ ):
        ключ  =  ключ  +  ключ [ я ]
        я  =  я  +  1
    я  =  0
    пока  я  <  lenth :
        cur  =  alph . найти ( ключ [ i ])
        ch  =  alph . найти ( текст [ i ])
        код  =  код  +  alph [( ch + cur ) %  len ( alph )]
        я  =  я + 1
     код возврата


def  decrypt ( текст , ключ ):
    альф  =  ''
    для  i  в  диапазоне ( 256 ):
        alph  + =  chr ( я )
    я  =  0
	lenth  =  len ( текст )
    декодировать  =  ''
    а  len ( текст ) >  len ( ключ ):
        ключ  =  ключ  +  ключ [ я ]
        я  =  я  +  1
    я  =  0
    пока  я  <  lenth :
        ch  =  alph . найти ( текст [ i ])
        cur  =  alph . найти ( ключ [ i ])
        расшифровывает  =  расшифровывает  +  Alph [( ч - дворняжка ) %  Len ( Alph )]
        я  =  я + 1
    вернуться  декодировать


def  main ():
    print  "Пример основной строки:"
    print  "[* .py] [имя входного файла] [имя ключевого файла] \
        [имя файла результатов] [кодировать или декодировать] "
    напечатать  "" "-c" "- закодировать"
    печать  "" "-d" "- декодировать"
    countPar  =  Len ( SYS . ARGV )
    если ( countPar  ! =  5 ):
        print  "Неправильное количество параметров."
        выход ()
    если ( sys . argv [ 4 ] ! =  "-c"  и  sys . argv [ 4 ] ! =  "-d" ):
        печать  "нерегулярная работа"
        выход ()

    inFileName  =  sys . argv [ 1 ]
    keyFileName  =  sys . argv [ 2 ]
    rezFileName  =  sys . argv [ 3 ]
    fl  =  sys . argv [ 4 ]

    с  open ( inFileName , 'r' ) как  inFile :
        TXT  =  inFile . читать ()
    с  open ( keyFileName , 'r' ) как  keyFile :
        КЛЮЧ  =  файл-ключ . читать ()
    если  fl  ==  '-c' :
        rez  =  encrypt ( TXT , KEY )
    еще :
        rez  =  расшифровать ( TXT , КЛЮЧ )
    с  open ( rezFileName , 'w' ) как  rezFile :
        rezFile . написать ( рез )
если  __name__  ==  "__main__" :
    main ()
